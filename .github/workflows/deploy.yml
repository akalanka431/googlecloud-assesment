name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Decode Base64 Secret and Authenticate with GCP
      - name: Decode and Authenticate with GCP
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud auth configure-docker

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-service:latest .

      # Step 4: Push Docker Image to Google Container Registry
      - name: Push Docker Image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-service:latest

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Step 1: Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      # Step 2: Authenticate and Configure kubectl
      - name: Authenticate kubectl
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 --decode > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} \
            --region ${{ secrets.GCP_CLUSTER_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      # Step 3: Deploy to GKE
      - name: Update Deployment in GKE
        run: |
          kubectl set image deployment/my-deployment my-container=gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-service:latest --record
          kubectl rollout status deployment/my-deployment
